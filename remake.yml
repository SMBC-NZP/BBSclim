# This file is automatically generated from remake.yml.whisker:
# edit the file there (or the files that it includes).

packages:
  - BBSclim
  - rBBS
  - RPresence

targets:
  all:
    depends:
      - inst/output/lowa/pres/pres_in.pao
      - inst/output/lowa/route_map.pdf
      - inst/output/rcwo/pres/pres_in.pao
      - inst/output/rcwo/route_map.pdf
      - inst/output/eawp/pres/pres_in.pao
      - inst/output/eawp/route_map.pdf
      - inst/output/acfl/pres/pres_in.pao
      - inst/output/acfl/route_map.pdf
      - inst/output/cwwi/pres/pres_in.pao
      - inst/output/cwwi/route_map.pdf
      - inst/output/ytvi/pres/pres_in.pao
      - inst/output/ytvi/route_map.pdf
      - inst/output/ytwa/pres/pres_in.pao
      - inst/output/ytwa/route_map.pdf
      - inst/output/bhnu/pres/pres_in.pao
      - inst/output/bhnu/route_map.pdf
      - inst/output/brth/pres/pres_in.pao
      - inst/output/brth/route_map.pdf
      - inst/output/bwwa/pres/pres_in.pao
      - inst/output/bwwa/route_map.pdf
      - inst/output/gwwa/pres/pres_in.pao
      - inst/output/gwwa/route_map.pdf
      - inst/output/piwa/pres/pres_in.pao
      - inst/output/piwa/route_map.pdf
      - inst/output/cerw/pres/pres_in.pao
      - inst/output/cerw/route_map.pdf
      - inst/output/praw/pres/pres_in.pao
      - inst/output/praw/route_map.pdf
      - inst/output/prow/pres/pres_in.pao
      - inst/output/prow/route_map.pdf
      - inst/output/wewa/pres/pres_in.pao
      - inst/output/wewa/route_map.pdf
      - inst/output/woth/pres/pres_in.pao
      - inst/output/woth/route_map.pdf
      - inst/output/swwa/pres/pres_in.pao
      - inst/output/swwa/route_map.pdf
      - inst/output/kewa/pres/pres_in.pao
      - inst/output/kewa/route_map.pdf
      - inst/output/howa/pres/pres_in.pao
      - inst/output/howa/route_map.pdf
      - inst/output/scta/pres/pres_in.pao
      - inst/output/scta/route_map.pdf
      - inst/output/eato/pres/pres_in.pao
      - inst/output/eato/route_map.pdf
      - inst/output/bacs/pres/pres_in.pao
      - inst/output/bacs/route_map.pdf
      - inst/output/fisp/pres/pres_in.pao
      - inst/output/fisp/route_map.pdf

## Load objects used for all species
  bbs:
    command: GetBBS()

  NA_biovars:
    command: data(target_name)

  psi_mods:
    command: GetPsiMods()## Data processing steps
  inst/output/lowa:
    command: CreateSpp(I(alpha = "lowa"))

  lowa_AOU:
    command: GetAOU(I(alpha = "lowa"))

  inst/output/lowa/raw_counts.csv:
    command: GetSppCounts(bbs_raw = bbs, AOU = lowa_AOU, Write = TRUE, path = 'inst/output/lowa')

  lowa_counts:
    command: read.csv("inst/output/lowa/raw_counts.csv")

  inst/output/lowa/no_outlier_counts.csv:
    command: RemoveOutliers(counts = lowa_counts, Write = TRUE, path = 'inst/output/lowa')

  inst/output/lowa/count_buff.csv:
    command: buffer_BBS(I(alpha = "lowa"), bbs = bbs)
    depends:
      - inst/output/lowa/no_outlier_counts.csv

  inst/output/lowa/route_map.pdf:
    command: make_route_plot(I(alpha = "lowa"))
    depends:
      - inst/output/lowa/count_buff.csv
      - inst/output/lowa/raw_counts.csv
      - inst/output/lowa/no_outlier_counts.csv

  inst/output/lowa/route_clim.csv:
    command: GetBioVars(I(alpha = "lowa"))
    depends:
      - NA_biovars
      - inst/output/lowa/count_buff.csv

  inst/output/lowa/pres/pres_in.pao:
    command: write_pao(I(alpha = "lowa"))
    depends:
      - inst/global_opts.csv
      - inst/output/lowa/count_buff.csv
      - inst/output/lowa/route_clim.csv
  inst/output/rcwo:
    command: CreateSpp(I(alpha = "rcwo"))

  rcwo_AOU:
    command: GetAOU(I(alpha = "rcwo"))

  inst/output/rcwo/raw_counts.csv:
    command: GetSppCounts(bbs_raw = bbs, AOU = rcwo_AOU, Write = TRUE, path = 'inst/output/rcwo')

  rcwo_counts:
    command: read.csv("inst/output/rcwo/raw_counts.csv")

  inst/output/rcwo/no_outlier_counts.csv:
    command: RemoveOutliers(counts = rcwo_counts, Write = TRUE, path = 'inst/output/rcwo')

  inst/output/rcwo/count_buff.csv:
    command: buffer_BBS(I(alpha = "rcwo"), bbs = bbs)
    depends:
      - inst/output/rcwo/no_outlier_counts.csv

  inst/output/rcwo/route_map.pdf:
    command: make_route_plot(I(alpha = "rcwo"))
    depends:
      - inst/output/rcwo/count_buff.csv
      - inst/output/rcwo/raw_counts.csv
      - inst/output/rcwo/no_outlier_counts.csv

  inst/output/rcwo/route_clim.csv:
    command: GetBioVars(I(alpha = "rcwo"))
    depends:
      - NA_biovars
      - inst/output/rcwo/count_buff.csv

  inst/output/rcwo/pres/pres_in.pao:
    command: write_pao(I(alpha = "rcwo"))
    depends:
      - inst/global_opts.csv
      - inst/output/rcwo/count_buff.csv
      - inst/output/rcwo/route_clim.csv
  inst/output/eawp:
    command: CreateSpp(I(alpha = "eawp"))

  eawp_AOU:
    command: GetAOU(I(alpha = "eawp"))

  inst/output/eawp/raw_counts.csv:
    command: GetSppCounts(bbs_raw = bbs, AOU = eawp_AOU, Write = TRUE, path = 'inst/output/eawp')

  eawp_counts:
    command: read.csv("inst/output/eawp/raw_counts.csv")

  inst/output/eawp/no_outlier_counts.csv:
    command: RemoveOutliers(counts = eawp_counts, Write = TRUE, path = 'inst/output/eawp')

  inst/output/eawp/count_buff.csv:
    command: buffer_BBS(I(alpha = "eawp"), bbs = bbs)
    depends:
      - inst/output/eawp/no_outlier_counts.csv

  inst/output/eawp/route_map.pdf:
    command: make_route_plot(I(alpha = "eawp"))
    depends:
      - inst/output/eawp/count_buff.csv
      - inst/output/eawp/raw_counts.csv
      - inst/output/eawp/no_outlier_counts.csv

  inst/output/eawp/route_clim.csv:
    command: GetBioVars(I(alpha = "eawp"))
    depends:
      - NA_biovars
      - inst/output/eawp/count_buff.csv

  inst/output/eawp/pres/pres_in.pao:
    command: write_pao(I(alpha = "eawp"))
    depends:
      - inst/global_opts.csv
      - inst/output/eawp/count_buff.csv
      - inst/output/eawp/route_clim.csv
  inst/output/acfl:
    command: CreateSpp(I(alpha = "acfl"))

  acfl_AOU:
    command: GetAOU(I(alpha = "acfl"))

  inst/output/acfl/raw_counts.csv:
    command: GetSppCounts(bbs_raw = bbs, AOU = acfl_AOU, Write = TRUE, path = 'inst/output/acfl')

  acfl_counts:
    command: read.csv("inst/output/acfl/raw_counts.csv")

  inst/output/acfl/no_outlier_counts.csv:
    command: RemoveOutliers(counts = acfl_counts, Write = TRUE, path = 'inst/output/acfl')

  inst/output/acfl/count_buff.csv:
    command: buffer_BBS(I(alpha = "acfl"), bbs = bbs)
    depends:
      - inst/output/acfl/no_outlier_counts.csv

  inst/output/acfl/route_map.pdf:
    command: make_route_plot(I(alpha = "acfl"))
    depends:
      - inst/output/acfl/count_buff.csv
      - inst/output/acfl/raw_counts.csv
      - inst/output/acfl/no_outlier_counts.csv

  inst/output/acfl/route_clim.csv:
    command: GetBioVars(I(alpha = "acfl"))
    depends:
      - NA_biovars
      - inst/output/acfl/count_buff.csv

  inst/output/acfl/pres/pres_in.pao:
    command: write_pao(I(alpha = "acfl"))
    depends:
      - inst/global_opts.csv
      - inst/output/acfl/count_buff.csv
      - inst/output/acfl/route_clim.csv
  inst/output/cwwi:
    command: CreateSpp(I(alpha = "cwwi"))

  cwwi_AOU:
    command: GetAOU(I(alpha = "cwwi"))

  inst/output/cwwi/raw_counts.csv:
    command: GetSppCounts(bbs_raw = bbs, AOU = cwwi_AOU, Write = TRUE, path = 'inst/output/cwwi')

  cwwi_counts:
    command: read.csv("inst/output/cwwi/raw_counts.csv")

  inst/output/cwwi/no_outlier_counts.csv:
    command: RemoveOutliers(counts = cwwi_counts, Write = TRUE, path = 'inst/output/cwwi')

  inst/output/cwwi/count_buff.csv:
    command: buffer_BBS(I(alpha = "cwwi"), bbs = bbs)
    depends:
      - inst/output/cwwi/no_outlier_counts.csv

  inst/output/cwwi/route_map.pdf:
    command: make_route_plot(I(alpha = "cwwi"))
    depends:
      - inst/output/cwwi/count_buff.csv
      - inst/output/cwwi/raw_counts.csv
      - inst/output/cwwi/no_outlier_counts.csv

  inst/output/cwwi/route_clim.csv:
    command: GetBioVars(I(alpha = "cwwi"))
    depends:
      - NA_biovars
      - inst/output/cwwi/count_buff.csv

  inst/output/cwwi/pres/pres_in.pao:
    command: write_pao(I(alpha = "cwwi"))
    depends:
      - inst/global_opts.csv
      - inst/output/cwwi/count_buff.csv
      - inst/output/cwwi/route_clim.csv
  inst/output/ytvi:
    command: CreateSpp(I(alpha = "ytvi"))

  ytvi_AOU:
    command: GetAOU(I(alpha = "ytvi"))

  inst/output/ytvi/raw_counts.csv:
    command: GetSppCounts(bbs_raw = bbs, AOU = ytvi_AOU, Write = TRUE, path = 'inst/output/ytvi')

  ytvi_counts:
    command: read.csv("inst/output/ytvi/raw_counts.csv")

  inst/output/ytvi/no_outlier_counts.csv:
    command: RemoveOutliers(counts = ytvi_counts, Write = TRUE, path = 'inst/output/ytvi')

  inst/output/ytvi/count_buff.csv:
    command: buffer_BBS(I(alpha = "ytvi"), bbs = bbs)
    depends:
      - inst/output/ytvi/no_outlier_counts.csv

  inst/output/ytvi/route_map.pdf:
    command: make_route_plot(I(alpha = "ytvi"))
    depends:
      - inst/output/ytvi/count_buff.csv
      - inst/output/ytvi/raw_counts.csv
      - inst/output/ytvi/no_outlier_counts.csv

  inst/output/ytvi/route_clim.csv:
    command: GetBioVars(I(alpha = "ytvi"))
    depends:
      - NA_biovars
      - inst/output/ytvi/count_buff.csv

  inst/output/ytvi/pres/pres_in.pao:
    command: write_pao(I(alpha = "ytvi"))
    depends:
      - inst/global_opts.csv
      - inst/output/ytvi/count_buff.csv
      - inst/output/ytvi/route_clim.csv
  inst/output/ytwa:
    command: CreateSpp(I(alpha = "ytwa"))

  ytwa_AOU:
    command: GetAOU(I(alpha = "ytwa"))

  inst/output/ytwa/raw_counts.csv:
    command: GetSppCounts(bbs_raw = bbs, AOU = ytwa_AOU, Write = TRUE, path = 'inst/output/ytwa')

  ytwa_counts:
    command: read.csv("inst/output/ytwa/raw_counts.csv")

  inst/output/ytwa/no_outlier_counts.csv:
    command: RemoveOutliers(counts = ytwa_counts, Write = TRUE, path = 'inst/output/ytwa')

  inst/output/ytwa/count_buff.csv:
    command: buffer_BBS(I(alpha = "ytwa"), bbs = bbs)
    depends:
      - inst/output/ytwa/no_outlier_counts.csv

  inst/output/ytwa/route_map.pdf:
    command: make_route_plot(I(alpha = "ytwa"))
    depends:
      - inst/output/ytwa/count_buff.csv
      - inst/output/ytwa/raw_counts.csv
      - inst/output/ytwa/no_outlier_counts.csv

  inst/output/ytwa/route_clim.csv:
    command: GetBioVars(I(alpha = "ytwa"))
    depends:
      - NA_biovars
      - inst/output/ytwa/count_buff.csv

  inst/output/ytwa/pres/pres_in.pao:
    command: write_pao(I(alpha = "ytwa"))
    depends:
      - inst/global_opts.csv
      - inst/output/ytwa/count_buff.csv
      - inst/output/ytwa/route_clim.csv
  inst/output/bhnu:
    command: CreateSpp(I(alpha = "bhnu"))

  bhnu_AOU:
    command: GetAOU(I(alpha = "bhnu"))

  inst/output/bhnu/raw_counts.csv:
    command: GetSppCounts(bbs_raw = bbs, AOU = bhnu_AOU, Write = TRUE, path = 'inst/output/bhnu')

  bhnu_counts:
    command: read.csv("inst/output/bhnu/raw_counts.csv")

  inst/output/bhnu/no_outlier_counts.csv:
    command: RemoveOutliers(counts = bhnu_counts, Write = TRUE, path = 'inst/output/bhnu')

  inst/output/bhnu/count_buff.csv:
    command: buffer_BBS(I(alpha = "bhnu"), bbs = bbs)
    depends:
      - inst/output/bhnu/no_outlier_counts.csv

  inst/output/bhnu/route_map.pdf:
    command: make_route_plot(I(alpha = "bhnu"))
    depends:
      - inst/output/bhnu/count_buff.csv
      - inst/output/bhnu/raw_counts.csv
      - inst/output/bhnu/no_outlier_counts.csv

  inst/output/bhnu/route_clim.csv:
    command: GetBioVars(I(alpha = "bhnu"))
    depends:
      - NA_biovars
      - inst/output/bhnu/count_buff.csv

  inst/output/bhnu/pres/pres_in.pao:
    command: write_pao(I(alpha = "bhnu"))
    depends:
      - inst/global_opts.csv
      - inst/output/bhnu/count_buff.csv
      - inst/output/bhnu/route_clim.csv
  inst/output/brth:
    command: CreateSpp(I(alpha = "brth"))

  brth_AOU:
    command: GetAOU(I(alpha = "brth"))

  inst/output/brth/raw_counts.csv:
    command: GetSppCounts(bbs_raw = bbs, AOU = brth_AOU, Write = TRUE, path = 'inst/output/brth')

  brth_counts:
    command: read.csv("inst/output/brth/raw_counts.csv")

  inst/output/brth/no_outlier_counts.csv:
    command: RemoveOutliers(counts = brth_counts, Write = TRUE, path = 'inst/output/brth')

  inst/output/brth/count_buff.csv:
    command: buffer_BBS(I(alpha = "brth"), bbs = bbs)
    depends:
      - inst/output/brth/no_outlier_counts.csv

  inst/output/brth/route_map.pdf:
    command: make_route_plot(I(alpha = "brth"))
    depends:
      - inst/output/brth/count_buff.csv
      - inst/output/brth/raw_counts.csv
      - inst/output/brth/no_outlier_counts.csv

  inst/output/brth/route_clim.csv:
    command: GetBioVars(I(alpha = "brth"))
    depends:
      - NA_biovars
      - inst/output/brth/count_buff.csv

  inst/output/brth/pres/pres_in.pao:
    command: write_pao(I(alpha = "brth"))
    depends:
      - inst/global_opts.csv
      - inst/output/brth/count_buff.csv
      - inst/output/brth/route_clim.csv
  inst/output/bwwa:
    command: CreateSpp(I(alpha = "bwwa"))

  bwwa_AOU:
    command: GetAOU(I(alpha = "bwwa"))

  inst/output/bwwa/raw_counts.csv:
    command: GetSppCounts(bbs_raw = bbs, AOU = bwwa_AOU, Write = TRUE, path = 'inst/output/bwwa')

  bwwa_counts:
    command: read.csv("inst/output/bwwa/raw_counts.csv")

  inst/output/bwwa/no_outlier_counts.csv:
    command: RemoveOutliers(counts = bwwa_counts, Write = TRUE, path = 'inst/output/bwwa')

  inst/output/bwwa/count_buff.csv:
    command: buffer_BBS(I(alpha = "bwwa"), bbs = bbs)
    depends:
      - inst/output/bwwa/no_outlier_counts.csv

  inst/output/bwwa/route_map.pdf:
    command: make_route_plot(I(alpha = "bwwa"))
    depends:
      - inst/output/bwwa/count_buff.csv
      - inst/output/bwwa/raw_counts.csv
      - inst/output/bwwa/no_outlier_counts.csv

  inst/output/bwwa/route_clim.csv:
    command: GetBioVars(I(alpha = "bwwa"))
    depends:
      - NA_biovars
      - inst/output/bwwa/count_buff.csv

  inst/output/bwwa/pres/pres_in.pao:
    command: write_pao(I(alpha = "bwwa"))
    depends:
      - inst/global_opts.csv
      - inst/output/bwwa/count_buff.csv
      - inst/output/bwwa/route_clim.csv
  inst/output/gwwa:
    command: CreateSpp(I(alpha = "gwwa"))

  gwwa_AOU:
    command: GetAOU(I(alpha = "gwwa"))

  inst/output/gwwa/raw_counts.csv:
    command: GetSppCounts(bbs_raw = bbs, AOU = gwwa_AOU, Write = TRUE, path = 'inst/output/gwwa')

  gwwa_counts:
    command: read.csv("inst/output/gwwa/raw_counts.csv")

  inst/output/gwwa/no_outlier_counts.csv:
    command: RemoveOutliers(counts = gwwa_counts, Write = TRUE, path = 'inst/output/gwwa')

  inst/output/gwwa/count_buff.csv:
    command: buffer_BBS(I(alpha = "gwwa"), bbs = bbs)
    depends:
      - inst/output/gwwa/no_outlier_counts.csv

  inst/output/gwwa/route_map.pdf:
    command: make_route_plot(I(alpha = "gwwa"))
    depends:
      - inst/output/gwwa/count_buff.csv
      - inst/output/gwwa/raw_counts.csv
      - inst/output/gwwa/no_outlier_counts.csv

  inst/output/gwwa/route_clim.csv:
    command: GetBioVars(I(alpha = "gwwa"))
    depends:
      - NA_biovars
      - inst/output/gwwa/count_buff.csv

  inst/output/gwwa/pres/pres_in.pao:
    command: write_pao(I(alpha = "gwwa"))
    depends:
      - inst/global_opts.csv
      - inst/output/gwwa/count_buff.csv
      - inst/output/gwwa/route_clim.csv
  inst/output/piwa:
    command: CreateSpp(I(alpha = "piwa"))

  piwa_AOU:
    command: GetAOU(I(alpha = "piwa"))

  inst/output/piwa/raw_counts.csv:
    command: GetSppCounts(bbs_raw = bbs, AOU = piwa_AOU, Write = TRUE, path = 'inst/output/piwa')

  piwa_counts:
    command: read.csv("inst/output/piwa/raw_counts.csv")

  inst/output/piwa/no_outlier_counts.csv:
    command: RemoveOutliers(counts = piwa_counts, Write = TRUE, path = 'inst/output/piwa')

  inst/output/piwa/count_buff.csv:
    command: buffer_BBS(I(alpha = "piwa"), bbs = bbs)
    depends:
      - inst/output/piwa/no_outlier_counts.csv

  inst/output/piwa/route_map.pdf:
    command: make_route_plot(I(alpha = "piwa"))
    depends:
      - inst/output/piwa/count_buff.csv
      - inst/output/piwa/raw_counts.csv
      - inst/output/piwa/no_outlier_counts.csv

  inst/output/piwa/route_clim.csv:
    command: GetBioVars(I(alpha = "piwa"))
    depends:
      - NA_biovars
      - inst/output/piwa/count_buff.csv

  inst/output/piwa/pres/pres_in.pao:
    command: write_pao(I(alpha = "piwa"))
    depends:
      - inst/global_opts.csv
      - inst/output/piwa/count_buff.csv
      - inst/output/piwa/route_clim.csv
  inst/output/cerw:
    command: CreateSpp(I(alpha = "cerw"))

  cerw_AOU:
    command: GetAOU(I(alpha = "cerw"))

  inst/output/cerw/raw_counts.csv:
    command: GetSppCounts(bbs_raw = bbs, AOU = cerw_AOU, Write = TRUE, path = 'inst/output/cerw')

  cerw_counts:
    command: read.csv("inst/output/cerw/raw_counts.csv")

  inst/output/cerw/no_outlier_counts.csv:
    command: RemoveOutliers(counts = cerw_counts, Write = TRUE, path = 'inst/output/cerw')

  inst/output/cerw/count_buff.csv:
    command: buffer_BBS(I(alpha = "cerw"), bbs = bbs)
    depends:
      - inst/output/cerw/no_outlier_counts.csv

  inst/output/cerw/route_map.pdf:
    command: make_route_plot(I(alpha = "cerw"))
    depends:
      - inst/output/cerw/count_buff.csv
      - inst/output/cerw/raw_counts.csv
      - inst/output/cerw/no_outlier_counts.csv

  inst/output/cerw/route_clim.csv:
    command: GetBioVars(I(alpha = "cerw"))
    depends:
      - NA_biovars
      - inst/output/cerw/count_buff.csv

  inst/output/cerw/pres/pres_in.pao:
    command: write_pao(I(alpha = "cerw"))
    depends:
      - inst/global_opts.csv
      - inst/output/cerw/count_buff.csv
      - inst/output/cerw/route_clim.csv
  inst/output/praw:
    command: CreateSpp(I(alpha = "praw"))

  praw_AOU:
    command: GetAOU(I(alpha = "praw"))

  inst/output/praw/raw_counts.csv:
    command: GetSppCounts(bbs_raw = bbs, AOU = praw_AOU, Write = TRUE, path = 'inst/output/praw')

  praw_counts:
    command: read.csv("inst/output/praw/raw_counts.csv")

  inst/output/praw/no_outlier_counts.csv:
    command: RemoveOutliers(counts = praw_counts, Write = TRUE, path = 'inst/output/praw')

  inst/output/praw/count_buff.csv:
    command: buffer_BBS(I(alpha = "praw"), bbs = bbs)
    depends:
      - inst/output/praw/no_outlier_counts.csv

  inst/output/praw/route_map.pdf:
    command: make_route_plot(I(alpha = "praw"))
    depends:
      - inst/output/praw/count_buff.csv
      - inst/output/praw/raw_counts.csv
      - inst/output/praw/no_outlier_counts.csv

  inst/output/praw/route_clim.csv:
    command: GetBioVars(I(alpha = "praw"))
    depends:
      - NA_biovars
      - inst/output/praw/count_buff.csv

  inst/output/praw/pres/pres_in.pao:
    command: write_pao(I(alpha = "praw"))
    depends:
      - inst/global_opts.csv
      - inst/output/praw/count_buff.csv
      - inst/output/praw/route_clim.csv
  inst/output/prow:
    command: CreateSpp(I(alpha = "prow"))

  prow_AOU:
    command: GetAOU(I(alpha = "prow"))

  inst/output/prow/raw_counts.csv:
    command: GetSppCounts(bbs_raw = bbs, AOU = prow_AOU, Write = TRUE, path = 'inst/output/prow')

  prow_counts:
    command: read.csv("inst/output/prow/raw_counts.csv")

  inst/output/prow/no_outlier_counts.csv:
    command: RemoveOutliers(counts = prow_counts, Write = TRUE, path = 'inst/output/prow')

  inst/output/prow/count_buff.csv:
    command: buffer_BBS(I(alpha = "prow"), bbs = bbs)
    depends:
      - inst/output/prow/no_outlier_counts.csv

  inst/output/prow/route_map.pdf:
    command: make_route_plot(I(alpha = "prow"))
    depends:
      - inst/output/prow/count_buff.csv
      - inst/output/prow/raw_counts.csv
      - inst/output/prow/no_outlier_counts.csv

  inst/output/prow/route_clim.csv:
    command: GetBioVars(I(alpha = "prow"))
    depends:
      - NA_biovars
      - inst/output/prow/count_buff.csv

  inst/output/prow/pres/pres_in.pao:
    command: write_pao(I(alpha = "prow"))
    depends:
      - inst/global_opts.csv
      - inst/output/prow/count_buff.csv
      - inst/output/prow/route_clim.csv
  inst/output/wewa:
    command: CreateSpp(I(alpha = "wewa"))

  wewa_AOU:
    command: GetAOU(I(alpha = "wewa"))

  inst/output/wewa/raw_counts.csv:
    command: GetSppCounts(bbs_raw = bbs, AOU = wewa_AOU, Write = TRUE, path = 'inst/output/wewa')

  wewa_counts:
    command: read.csv("inst/output/wewa/raw_counts.csv")

  inst/output/wewa/no_outlier_counts.csv:
    command: RemoveOutliers(counts = wewa_counts, Write = TRUE, path = 'inst/output/wewa')

  inst/output/wewa/count_buff.csv:
    command: buffer_BBS(I(alpha = "wewa"), bbs = bbs)
    depends:
      - inst/output/wewa/no_outlier_counts.csv

  inst/output/wewa/route_map.pdf:
    command: make_route_plot(I(alpha = "wewa"))
    depends:
      - inst/output/wewa/count_buff.csv
      - inst/output/wewa/raw_counts.csv
      - inst/output/wewa/no_outlier_counts.csv

  inst/output/wewa/route_clim.csv:
    command: GetBioVars(I(alpha = "wewa"))
    depends:
      - NA_biovars
      - inst/output/wewa/count_buff.csv

  inst/output/wewa/pres/pres_in.pao:
    command: write_pao(I(alpha = "wewa"))
    depends:
      - inst/global_opts.csv
      - inst/output/wewa/count_buff.csv
      - inst/output/wewa/route_clim.csv
  inst/output/woth:
    command: CreateSpp(I(alpha = "woth"))

  woth_AOU:
    command: GetAOU(I(alpha = "woth"))

  inst/output/woth/raw_counts.csv:
    command: GetSppCounts(bbs_raw = bbs, AOU = woth_AOU, Write = TRUE, path = 'inst/output/woth')

  woth_counts:
    command: read.csv("inst/output/woth/raw_counts.csv")

  inst/output/woth/no_outlier_counts.csv:
    command: RemoveOutliers(counts = woth_counts, Write = TRUE, path = 'inst/output/woth')

  inst/output/woth/count_buff.csv:
    command: buffer_BBS(I(alpha = "woth"), bbs = bbs)
    depends:
      - inst/output/woth/no_outlier_counts.csv

  inst/output/woth/route_map.pdf:
    command: make_route_plot(I(alpha = "woth"))
    depends:
      - inst/output/woth/count_buff.csv
      - inst/output/woth/raw_counts.csv
      - inst/output/woth/no_outlier_counts.csv

  inst/output/woth/route_clim.csv:
    command: GetBioVars(I(alpha = "woth"))
    depends:
      - NA_biovars
      - inst/output/woth/count_buff.csv

  inst/output/woth/pres/pres_in.pao:
    command: write_pao(I(alpha = "woth"))
    depends:
      - inst/global_opts.csv
      - inst/output/woth/count_buff.csv
      - inst/output/woth/route_clim.csv
  inst/output/swwa:
    command: CreateSpp(I(alpha = "swwa"))

  swwa_AOU:
    command: GetAOU(I(alpha = "swwa"))

  inst/output/swwa/raw_counts.csv:
    command: GetSppCounts(bbs_raw = bbs, AOU = swwa_AOU, Write = TRUE, path = 'inst/output/swwa')

  swwa_counts:
    command: read.csv("inst/output/swwa/raw_counts.csv")

  inst/output/swwa/no_outlier_counts.csv:
    command: RemoveOutliers(counts = swwa_counts, Write = TRUE, path = 'inst/output/swwa')

  inst/output/swwa/count_buff.csv:
    command: buffer_BBS(I(alpha = "swwa"), bbs = bbs)
    depends:
      - inst/output/swwa/no_outlier_counts.csv

  inst/output/swwa/route_map.pdf:
    command: make_route_plot(I(alpha = "swwa"))
    depends:
      - inst/output/swwa/count_buff.csv
      - inst/output/swwa/raw_counts.csv
      - inst/output/swwa/no_outlier_counts.csv

  inst/output/swwa/route_clim.csv:
    command: GetBioVars(I(alpha = "swwa"))
    depends:
      - NA_biovars
      - inst/output/swwa/count_buff.csv

  inst/output/swwa/pres/pres_in.pao:
    command: write_pao(I(alpha = "swwa"))
    depends:
      - inst/global_opts.csv
      - inst/output/swwa/count_buff.csv
      - inst/output/swwa/route_clim.csv
  inst/output/kewa:
    command: CreateSpp(I(alpha = "kewa"))

  kewa_AOU:
    command: GetAOU(I(alpha = "kewa"))

  inst/output/kewa/raw_counts.csv:
    command: GetSppCounts(bbs_raw = bbs, AOU = kewa_AOU, Write = TRUE, path = 'inst/output/kewa')

  kewa_counts:
    command: read.csv("inst/output/kewa/raw_counts.csv")

  inst/output/kewa/no_outlier_counts.csv:
    command: RemoveOutliers(counts = kewa_counts, Write = TRUE, path = 'inst/output/kewa')

  inst/output/kewa/count_buff.csv:
    command: buffer_BBS(I(alpha = "kewa"), bbs = bbs)
    depends:
      - inst/output/kewa/no_outlier_counts.csv

  inst/output/kewa/route_map.pdf:
    command: make_route_plot(I(alpha = "kewa"))
    depends:
      - inst/output/kewa/count_buff.csv
      - inst/output/kewa/raw_counts.csv
      - inst/output/kewa/no_outlier_counts.csv

  inst/output/kewa/route_clim.csv:
    command: GetBioVars(I(alpha = "kewa"))
    depends:
      - NA_biovars
      - inst/output/kewa/count_buff.csv

  inst/output/kewa/pres/pres_in.pao:
    command: write_pao(I(alpha = "kewa"))
    depends:
      - inst/global_opts.csv
      - inst/output/kewa/count_buff.csv
      - inst/output/kewa/route_clim.csv
  inst/output/howa:
    command: CreateSpp(I(alpha = "howa"))

  howa_AOU:
    command: GetAOU(I(alpha = "howa"))

  inst/output/howa/raw_counts.csv:
    command: GetSppCounts(bbs_raw = bbs, AOU = howa_AOU, Write = TRUE, path = 'inst/output/howa')

  howa_counts:
    command: read.csv("inst/output/howa/raw_counts.csv")

  inst/output/howa/no_outlier_counts.csv:
    command: RemoveOutliers(counts = howa_counts, Write = TRUE, path = 'inst/output/howa')

  inst/output/howa/count_buff.csv:
    command: buffer_BBS(I(alpha = "howa"), bbs = bbs)
    depends:
      - inst/output/howa/no_outlier_counts.csv

  inst/output/howa/route_map.pdf:
    command: make_route_plot(I(alpha = "howa"))
    depends:
      - inst/output/howa/count_buff.csv
      - inst/output/howa/raw_counts.csv
      - inst/output/howa/no_outlier_counts.csv

  inst/output/howa/route_clim.csv:
    command: GetBioVars(I(alpha = "howa"))
    depends:
      - NA_biovars
      - inst/output/howa/count_buff.csv

  inst/output/howa/pres/pres_in.pao:
    command: write_pao(I(alpha = "howa"))
    depends:
      - inst/global_opts.csv
      - inst/output/howa/count_buff.csv
      - inst/output/howa/route_clim.csv
  inst/output/scta:
    command: CreateSpp(I(alpha = "scta"))

  scta_AOU:
    command: GetAOU(I(alpha = "scta"))

  inst/output/scta/raw_counts.csv:
    command: GetSppCounts(bbs_raw = bbs, AOU = scta_AOU, Write = TRUE, path = 'inst/output/scta')

  scta_counts:
    command: read.csv("inst/output/scta/raw_counts.csv")

  inst/output/scta/no_outlier_counts.csv:
    command: RemoveOutliers(counts = scta_counts, Write = TRUE, path = 'inst/output/scta')

  inst/output/scta/count_buff.csv:
    command: buffer_BBS(I(alpha = "scta"), bbs = bbs)
    depends:
      - inst/output/scta/no_outlier_counts.csv

  inst/output/scta/route_map.pdf:
    command: make_route_plot(I(alpha = "scta"))
    depends:
      - inst/output/scta/count_buff.csv
      - inst/output/scta/raw_counts.csv
      - inst/output/scta/no_outlier_counts.csv

  inst/output/scta/route_clim.csv:
    command: GetBioVars(I(alpha = "scta"))
    depends:
      - NA_biovars
      - inst/output/scta/count_buff.csv

  inst/output/scta/pres/pres_in.pao:
    command: write_pao(I(alpha = "scta"))
    depends:
      - inst/global_opts.csv
      - inst/output/scta/count_buff.csv
      - inst/output/scta/route_clim.csv
  inst/output/eato:
    command: CreateSpp(I(alpha = "eato"))

  eato_AOU:
    command: GetAOU(I(alpha = "eato"))

  inst/output/eato/raw_counts.csv:
    command: GetSppCounts(bbs_raw = bbs, AOU = eato_AOU, Write = TRUE, path = 'inst/output/eato')

  eato_counts:
    command: read.csv("inst/output/eato/raw_counts.csv")

  inst/output/eato/no_outlier_counts.csv:
    command: RemoveOutliers(counts = eato_counts, Write = TRUE, path = 'inst/output/eato')

  inst/output/eato/count_buff.csv:
    command: buffer_BBS(I(alpha = "eato"), bbs = bbs)
    depends:
      - inst/output/eato/no_outlier_counts.csv

  inst/output/eato/route_map.pdf:
    command: make_route_plot(I(alpha = "eato"))
    depends:
      - inst/output/eato/count_buff.csv
      - inst/output/eato/raw_counts.csv
      - inst/output/eato/no_outlier_counts.csv

  inst/output/eato/route_clim.csv:
    command: GetBioVars(I(alpha = "eato"))
    depends:
      - NA_biovars
      - inst/output/eato/count_buff.csv

  inst/output/eato/pres/pres_in.pao:
    command: write_pao(I(alpha = "eato"))
    depends:
      - inst/global_opts.csv
      - inst/output/eato/count_buff.csv
      - inst/output/eato/route_clim.csv
  inst/output/bacs:
    command: CreateSpp(I(alpha = "bacs"))

  bacs_AOU:
    command: GetAOU(I(alpha = "bacs"))

  inst/output/bacs/raw_counts.csv:
    command: GetSppCounts(bbs_raw = bbs, AOU = bacs_AOU, Write = TRUE, path = 'inst/output/bacs')

  bacs_counts:
    command: read.csv("inst/output/bacs/raw_counts.csv")

  inst/output/bacs/no_outlier_counts.csv:
    command: RemoveOutliers(counts = bacs_counts, Write = TRUE, path = 'inst/output/bacs')

  inst/output/bacs/count_buff.csv:
    command: buffer_BBS(I(alpha = "bacs"), bbs = bbs)
    depends:
      - inst/output/bacs/no_outlier_counts.csv

  inst/output/bacs/route_map.pdf:
    command: make_route_plot(I(alpha = "bacs"))
    depends:
      - inst/output/bacs/count_buff.csv
      - inst/output/bacs/raw_counts.csv
      - inst/output/bacs/no_outlier_counts.csv

  inst/output/bacs/route_clim.csv:
    command: GetBioVars(I(alpha = "bacs"))
    depends:
      - NA_biovars
      - inst/output/bacs/count_buff.csv

  inst/output/bacs/pres/pres_in.pao:
    command: write_pao(I(alpha = "bacs"))
    depends:
      - inst/global_opts.csv
      - inst/output/bacs/count_buff.csv
      - inst/output/bacs/route_clim.csv
  inst/output/fisp:
    command: CreateSpp(I(alpha = "fisp"))

  fisp_AOU:
    command: GetAOU(I(alpha = "fisp"))

  inst/output/fisp/raw_counts.csv:
    command: GetSppCounts(bbs_raw = bbs, AOU = fisp_AOU, Write = TRUE, path = 'inst/output/fisp')

  fisp_counts:
    command: read.csv("inst/output/fisp/raw_counts.csv")

  inst/output/fisp/no_outlier_counts.csv:
    command: RemoveOutliers(counts = fisp_counts, Write = TRUE, path = 'inst/output/fisp')

  inst/output/fisp/count_buff.csv:
    command: buffer_BBS(I(alpha = "fisp"), bbs = bbs)
    depends:
      - inst/output/fisp/no_outlier_counts.csv

  inst/output/fisp/route_map.pdf:
    command: make_route_plot(I(alpha = "fisp"))
    depends:
      - inst/output/fisp/count_buff.csv
      - inst/output/fisp/raw_counts.csv
      - inst/output/fisp/no_outlier_counts.csv

  inst/output/fisp/route_clim.csv:
    command: GetBioVars(I(alpha = "fisp"))
    depends:
      - NA_biovars
      - inst/output/fisp/count_buff.csv

  inst/output/fisp/pres/pres_in.pao:
    command: write_pao(I(alpha = "fisp"))
    depends:
      - inst/global_opts.csv
      - inst/output/fisp/count_buff.csv
      - inst/output/fisp/route_clim.csv
## Run models
#  lowa_pao:
#    command: read.pao(f = "inst/output/lowa/pres/pres_in.pao")

#  inst/output/lowa/psi_aic.csv:
#    command: RunPsiMods(I(alpha = "lowa"), pao = lowa_pao, mods = psi_mods)
#    depends:
#      - inst/model_opts.csv

#  lowa_psi_covs:
#    command: top_covs(I(alpha = "lowa"), mods = psi_mods)
#    depends:
#      - inst/output/lowa/psi_aic.csv

#  lowa_gam_mods:
#    command: GetGamMods(psi_covs = lowa_psi_covs)
#
#  inst/output/lowa/gam_aic.csv:
#    command: RunGamMods(I(alpha = "lowa"), pao = lowa_pao, mods = #lowa_gam_mods)
#    depends:
#      - inst/model_opts.csv

#  inst/output/lowa/top_mod.out:
#    command: gof(I(alpha = "lowa"), mods = lowa_gam_mods, pao = lowa_pao)
#    depends:
#      - inst/output/lowa/gam_aic.csv
#      - inst/model_opts.csv
#      - inst/global_opts.csv
#      - inst/output/lowa/route_clim.csv

#  rcwo_pao:
#    command: read.pao(f = "inst/output/rcwo/pres/pres_in.pao")

#  inst/output/rcwo/psi_aic.csv:
#    command: RunPsiMods(I(alpha = "rcwo"), pao = rcwo_pao, mods = psi_mods)
#    depends:
#      - inst/model_opts.csv

#  rcwo_psi_covs:
#    command: top_covs(I(alpha = "rcwo"), mods = psi_mods)
#    depends:
#      - inst/output/rcwo/psi_aic.csv

#  rcwo_gam_mods:
#    command: GetGamMods(psi_covs = rcwo_psi_covs)
#
#  inst/output/rcwo/gam_aic.csv:
#    command: RunGamMods(I(alpha = "rcwo"), pao = rcwo_pao, mods = #rcwo_gam_mods)
#    depends:
#      - inst/model_opts.csv

#  inst/output/rcwo/top_mod.out:
#    command: gof(I(alpha = "rcwo"), mods = rcwo_gam_mods, pao = rcwo_pao)
#    depends:
#      - inst/output/rcwo/gam_aic.csv
#      - inst/model_opts.csv
#      - inst/global_opts.csv
#      - inst/output/rcwo/route_clim.csv

#  eawp_pao:
#    command: read.pao(f = "inst/output/eawp/pres/pres_in.pao")

#  inst/output/eawp/psi_aic.csv:
#    command: RunPsiMods(I(alpha = "eawp"), pao = eawp_pao, mods = psi_mods)
#    depends:
#      - inst/model_opts.csv

#  eawp_psi_covs:
#    command: top_covs(I(alpha = "eawp"), mods = psi_mods)
#    depends:
#      - inst/output/eawp/psi_aic.csv

#  eawp_gam_mods:
#    command: GetGamMods(psi_covs = eawp_psi_covs)
#
#  inst/output/eawp/gam_aic.csv:
#    command: RunGamMods(I(alpha = "eawp"), pao = eawp_pao, mods = #eawp_gam_mods)
#    depends:
#      - inst/model_opts.csv

#  inst/output/eawp/top_mod.out:
#    command: gof(I(alpha = "eawp"), mods = eawp_gam_mods, pao = eawp_pao)
#    depends:
#      - inst/output/eawp/gam_aic.csv
#      - inst/model_opts.csv
#      - inst/global_opts.csv
#      - inst/output/eawp/route_clim.csv

#  acfl_pao:
#    command: read.pao(f = "inst/output/acfl/pres/pres_in.pao")

#  inst/output/acfl/psi_aic.csv:
#    command: RunPsiMods(I(alpha = "acfl"), pao = acfl_pao, mods = psi_mods)
#    depends:
#      - inst/model_opts.csv

#  acfl_psi_covs:
#    command: top_covs(I(alpha = "acfl"), mods = psi_mods)
#    depends:
#      - inst/output/acfl/psi_aic.csv

#  acfl_gam_mods:
#    command: GetGamMods(psi_covs = acfl_psi_covs)
#
#  inst/output/acfl/gam_aic.csv:
#    command: RunGamMods(I(alpha = "acfl"), pao = acfl_pao, mods = #acfl_gam_mods)
#    depends:
#      - inst/model_opts.csv

#  inst/output/acfl/top_mod.out:
#    command: gof(I(alpha = "acfl"), mods = acfl_gam_mods, pao = acfl_pao)
#    depends:
#      - inst/output/acfl/gam_aic.csv
#      - inst/model_opts.csv
#      - inst/global_opts.csv
#      - inst/output/acfl/route_clim.csv

#  cwwi_pao:
#    command: read.pao(f = "inst/output/cwwi/pres/pres_in.pao")

#  inst/output/cwwi/psi_aic.csv:
#    command: RunPsiMods(I(alpha = "cwwi"), pao = cwwi_pao, mods = psi_mods)
#    depends:
#      - inst/model_opts.csv

#  cwwi_psi_covs:
#    command: top_covs(I(alpha = "cwwi"), mods = psi_mods)
#    depends:
#      - inst/output/cwwi/psi_aic.csv

#  cwwi_gam_mods:
#    command: GetGamMods(psi_covs = cwwi_psi_covs)
#
#  inst/output/cwwi/gam_aic.csv:
#    command: RunGamMods(I(alpha = "cwwi"), pao = cwwi_pao, mods = #cwwi_gam_mods)
#    depends:
#      - inst/model_opts.csv

#  inst/output/cwwi/top_mod.out:
#    command: gof(I(alpha = "cwwi"), mods = cwwi_gam_mods, pao = cwwi_pao)
#    depends:
#      - inst/output/cwwi/gam_aic.csv
#      - inst/model_opts.csv
#      - inst/global_opts.csv
#      - inst/output/cwwi/route_clim.csv

#  ytvi_pao:
#    command: read.pao(f = "inst/output/ytvi/pres/pres_in.pao")

#  inst/output/ytvi/psi_aic.csv:
#    command: RunPsiMods(I(alpha = "ytvi"), pao = ytvi_pao, mods = psi_mods)
#    depends:
#      - inst/model_opts.csv

#  ytvi_psi_covs:
#    command: top_covs(I(alpha = "ytvi"), mods = psi_mods)
#    depends:
#      - inst/output/ytvi/psi_aic.csv

#  ytvi_gam_mods:
#    command: GetGamMods(psi_covs = ytvi_psi_covs)
#
#  inst/output/ytvi/gam_aic.csv:
#    command: RunGamMods(I(alpha = "ytvi"), pao = ytvi_pao, mods = #ytvi_gam_mods)
#    depends:
#      - inst/model_opts.csv

#  inst/output/ytvi/top_mod.out:
#    command: gof(I(alpha = "ytvi"), mods = ytvi_gam_mods, pao = ytvi_pao)
#    depends:
#      - inst/output/ytvi/gam_aic.csv
#      - inst/model_opts.csv
#      - inst/global_opts.csv
#      - inst/output/ytvi/route_clim.csv

#  ytwa_pao:
#    command: read.pao(f = "inst/output/ytwa/pres/pres_in.pao")

#  inst/output/ytwa/psi_aic.csv:
#    command: RunPsiMods(I(alpha = "ytwa"), pao = ytwa_pao, mods = psi_mods)
#    depends:
#      - inst/model_opts.csv

#  ytwa_psi_covs:
#    command: top_covs(I(alpha = "ytwa"), mods = psi_mods)
#    depends:
#      - inst/output/ytwa/psi_aic.csv

#  ytwa_gam_mods:
#    command: GetGamMods(psi_covs = ytwa_psi_covs)
#
#  inst/output/ytwa/gam_aic.csv:
#    command: RunGamMods(I(alpha = "ytwa"), pao = ytwa_pao, mods = #ytwa_gam_mods)
#    depends:
#      - inst/model_opts.csv

#  inst/output/ytwa/top_mod.out:
#    command: gof(I(alpha = "ytwa"), mods = ytwa_gam_mods, pao = ytwa_pao)
#    depends:
#      - inst/output/ytwa/gam_aic.csv
#      - inst/model_opts.csv
#      - inst/global_opts.csv
#      - inst/output/ytwa/route_clim.csv

#  bhnu_pao:
#    command: read.pao(f = "inst/output/bhnu/pres/pres_in.pao")

#  inst/output/bhnu/psi_aic.csv:
#    command: RunPsiMods(I(alpha = "bhnu"), pao = bhnu_pao, mods = psi_mods)
#    depends:
#      - inst/model_opts.csv

#  bhnu_psi_covs:
#    command: top_covs(I(alpha = "bhnu"), mods = psi_mods)
#    depends:
#      - inst/output/bhnu/psi_aic.csv

#  bhnu_gam_mods:
#    command: GetGamMods(psi_covs = bhnu_psi_covs)
#
#  inst/output/bhnu/gam_aic.csv:
#    command: RunGamMods(I(alpha = "bhnu"), pao = bhnu_pao, mods = #bhnu_gam_mods)
#    depends:
#      - inst/model_opts.csv

#  inst/output/bhnu/top_mod.out:
#    command: gof(I(alpha = "bhnu"), mods = bhnu_gam_mods, pao = bhnu_pao)
#    depends:
#      - inst/output/bhnu/gam_aic.csv
#      - inst/model_opts.csv
#      - inst/global_opts.csv
#      - inst/output/bhnu/route_clim.csv

#  brth_pao:
#    command: read.pao(f = "inst/output/brth/pres/pres_in.pao")

#  inst/output/brth/psi_aic.csv:
#    command: RunPsiMods(I(alpha = "brth"), pao = brth_pao, mods = psi_mods)
#    depends:
#      - inst/model_opts.csv

#  brth_psi_covs:
#    command: top_covs(I(alpha = "brth"), mods = psi_mods)
#    depends:
#      - inst/output/brth/psi_aic.csv

#  brth_gam_mods:
#    command: GetGamMods(psi_covs = brth_psi_covs)
#
#  inst/output/brth/gam_aic.csv:
#    command: RunGamMods(I(alpha = "brth"), pao = brth_pao, mods = #brth_gam_mods)
#    depends:
#      - inst/model_opts.csv

#  inst/output/brth/top_mod.out:
#    command: gof(I(alpha = "brth"), mods = brth_gam_mods, pao = brth_pao)
#    depends:
#      - inst/output/brth/gam_aic.csv
#      - inst/model_opts.csv
#      - inst/global_opts.csv
#      - inst/output/brth/route_clim.csv

#  bwwa_pao:
#    command: read.pao(f = "inst/output/bwwa/pres/pres_in.pao")

#  inst/output/bwwa/psi_aic.csv:
#    command: RunPsiMods(I(alpha = "bwwa"), pao = bwwa_pao, mods = psi_mods)
#    depends:
#      - inst/model_opts.csv

#  bwwa_psi_covs:
#    command: top_covs(I(alpha = "bwwa"), mods = psi_mods)
#    depends:
#      - inst/output/bwwa/psi_aic.csv

#  bwwa_gam_mods:
#    command: GetGamMods(psi_covs = bwwa_psi_covs)
#
#  inst/output/bwwa/gam_aic.csv:
#    command: RunGamMods(I(alpha = "bwwa"), pao = bwwa_pao, mods = #bwwa_gam_mods)
#    depends:
#      - inst/model_opts.csv

#  inst/output/bwwa/top_mod.out:
#    command: gof(I(alpha = "bwwa"), mods = bwwa_gam_mods, pao = bwwa_pao)
#    depends:
#      - inst/output/bwwa/gam_aic.csv
#      - inst/model_opts.csv
#      - inst/global_opts.csv
#      - inst/output/bwwa/route_clim.csv

#  gwwa_pao:
#    command: read.pao(f = "inst/output/gwwa/pres/pres_in.pao")

#  inst/output/gwwa/psi_aic.csv:
#    command: RunPsiMods(I(alpha = "gwwa"), pao = gwwa_pao, mods = psi_mods)
#    depends:
#      - inst/model_opts.csv

#  gwwa_psi_covs:
#    command: top_covs(I(alpha = "gwwa"), mods = psi_mods)
#    depends:
#      - inst/output/gwwa/psi_aic.csv

#  gwwa_gam_mods:
#    command: GetGamMods(psi_covs = gwwa_psi_covs)
#
#  inst/output/gwwa/gam_aic.csv:
#    command: RunGamMods(I(alpha = "gwwa"), pao = gwwa_pao, mods = #gwwa_gam_mods)
#    depends:
#      - inst/model_opts.csv

#  inst/output/gwwa/top_mod.out:
#    command: gof(I(alpha = "gwwa"), mods = gwwa_gam_mods, pao = gwwa_pao)
#    depends:
#      - inst/output/gwwa/gam_aic.csv
#      - inst/model_opts.csv
#      - inst/global_opts.csv
#      - inst/output/gwwa/route_clim.csv

#  piwa_pao:
#    command: read.pao(f = "inst/output/piwa/pres/pres_in.pao")

#  inst/output/piwa/psi_aic.csv:
#    command: RunPsiMods(I(alpha = "piwa"), pao = piwa_pao, mods = psi_mods)
#    depends:
#      - inst/model_opts.csv

#  piwa_psi_covs:
#    command: top_covs(I(alpha = "piwa"), mods = psi_mods)
#    depends:
#      - inst/output/piwa/psi_aic.csv

#  piwa_gam_mods:
#    command: GetGamMods(psi_covs = piwa_psi_covs)
#
#  inst/output/piwa/gam_aic.csv:
#    command: RunGamMods(I(alpha = "piwa"), pao = piwa_pao, mods = #piwa_gam_mods)
#    depends:
#      - inst/model_opts.csv

#  inst/output/piwa/top_mod.out:
#    command: gof(I(alpha = "piwa"), mods = piwa_gam_mods, pao = piwa_pao)
#    depends:
#      - inst/output/piwa/gam_aic.csv
#      - inst/model_opts.csv
#      - inst/global_opts.csv
#      - inst/output/piwa/route_clim.csv

#  cerw_pao:
#    command: read.pao(f = "inst/output/cerw/pres/pres_in.pao")

#  inst/output/cerw/psi_aic.csv:
#    command: RunPsiMods(I(alpha = "cerw"), pao = cerw_pao, mods = psi_mods)
#    depends:
#      - inst/model_opts.csv

#  cerw_psi_covs:
#    command: top_covs(I(alpha = "cerw"), mods = psi_mods)
#    depends:
#      - inst/output/cerw/psi_aic.csv

#  cerw_gam_mods:
#    command: GetGamMods(psi_covs = cerw_psi_covs)
#
#  inst/output/cerw/gam_aic.csv:
#    command: RunGamMods(I(alpha = "cerw"), pao = cerw_pao, mods = #cerw_gam_mods)
#    depends:
#      - inst/model_opts.csv

#  inst/output/cerw/top_mod.out:
#    command: gof(I(alpha = "cerw"), mods = cerw_gam_mods, pao = cerw_pao)
#    depends:
#      - inst/output/cerw/gam_aic.csv
#      - inst/model_opts.csv
#      - inst/global_opts.csv
#      - inst/output/cerw/route_clim.csv

#  praw_pao:
#    command: read.pao(f = "inst/output/praw/pres/pres_in.pao")

#  inst/output/praw/psi_aic.csv:
#    command: RunPsiMods(I(alpha = "praw"), pao = praw_pao, mods = psi_mods)
#    depends:
#      - inst/model_opts.csv

#  praw_psi_covs:
#    command: top_covs(I(alpha = "praw"), mods = psi_mods)
#    depends:
#      - inst/output/praw/psi_aic.csv

#  praw_gam_mods:
#    command: GetGamMods(psi_covs = praw_psi_covs)
#
#  inst/output/praw/gam_aic.csv:
#    command: RunGamMods(I(alpha = "praw"), pao = praw_pao, mods = #praw_gam_mods)
#    depends:
#      - inst/model_opts.csv

#  inst/output/praw/top_mod.out:
#    command: gof(I(alpha = "praw"), mods = praw_gam_mods, pao = praw_pao)
#    depends:
#      - inst/output/praw/gam_aic.csv
#      - inst/model_opts.csv
#      - inst/global_opts.csv
#      - inst/output/praw/route_clim.csv

#  prow_pao:
#    command: read.pao(f = "inst/output/prow/pres/pres_in.pao")

#  inst/output/prow/psi_aic.csv:
#    command: RunPsiMods(I(alpha = "prow"), pao = prow_pao, mods = psi_mods)
#    depends:
#      - inst/model_opts.csv

#  prow_psi_covs:
#    command: top_covs(I(alpha = "prow"), mods = psi_mods)
#    depends:
#      - inst/output/prow/psi_aic.csv

#  prow_gam_mods:
#    command: GetGamMods(psi_covs = prow_psi_covs)
#
#  inst/output/prow/gam_aic.csv:
#    command: RunGamMods(I(alpha = "prow"), pao = prow_pao, mods = #prow_gam_mods)
#    depends:
#      - inst/model_opts.csv

#  inst/output/prow/top_mod.out:
#    command: gof(I(alpha = "prow"), mods = prow_gam_mods, pao = prow_pao)
#    depends:
#      - inst/output/prow/gam_aic.csv
#      - inst/model_opts.csv
#      - inst/global_opts.csv
#      - inst/output/prow/route_clim.csv

#  wewa_pao:
#    command: read.pao(f = "inst/output/wewa/pres/pres_in.pao")

#  inst/output/wewa/psi_aic.csv:
#    command: RunPsiMods(I(alpha = "wewa"), pao = wewa_pao, mods = psi_mods)
#    depends:
#      - inst/model_opts.csv

#  wewa_psi_covs:
#    command: top_covs(I(alpha = "wewa"), mods = psi_mods)
#    depends:
#      - inst/output/wewa/psi_aic.csv

#  wewa_gam_mods:
#    command: GetGamMods(psi_covs = wewa_psi_covs)
#
#  inst/output/wewa/gam_aic.csv:
#    command: RunGamMods(I(alpha = "wewa"), pao = wewa_pao, mods = #wewa_gam_mods)
#    depends:
#      - inst/model_opts.csv

#  inst/output/wewa/top_mod.out:
#    command: gof(I(alpha = "wewa"), mods = wewa_gam_mods, pao = wewa_pao)
#    depends:
#      - inst/output/wewa/gam_aic.csv
#      - inst/model_opts.csv
#      - inst/global_opts.csv
#      - inst/output/wewa/route_clim.csv

#  woth_pao:
#    command: read.pao(f = "inst/output/woth/pres/pres_in.pao")

#  inst/output/woth/psi_aic.csv:
#    command: RunPsiMods(I(alpha = "woth"), pao = woth_pao, mods = psi_mods)
#    depends:
#      - inst/model_opts.csv

#  woth_psi_covs:
#    command: top_covs(I(alpha = "woth"), mods = psi_mods)
#    depends:
#      - inst/output/woth/psi_aic.csv

#  woth_gam_mods:
#    command: GetGamMods(psi_covs = woth_psi_covs)
#
#  inst/output/woth/gam_aic.csv:
#    command: RunGamMods(I(alpha = "woth"), pao = woth_pao, mods = #woth_gam_mods)
#    depends:
#      - inst/model_opts.csv

#  inst/output/woth/top_mod.out:
#    command: gof(I(alpha = "woth"), mods = woth_gam_mods, pao = woth_pao)
#    depends:
#      - inst/output/woth/gam_aic.csv
#      - inst/model_opts.csv
#      - inst/global_opts.csv
#      - inst/output/woth/route_clim.csv

#  swwa_pao:
#    command: read.pao(f = "inst/output/swwa/pres/pres_in.pao")

#  inst/output/swwa/psi_aic.csv:
#    command: RunPsiMods(I(alpha = "swwa"), pao = swwa_pao, mods = psi_mods)
#    depends:
#      - inst/model_opts.csv

#  swwa_psi_covs:
#    command: top_covs(I(alpha = "swwa"), mods = psi_mods)
#    depends:
#      - inst/output/swwa/psi_aic.csv

#  swwa_gam_mods:
#    command: GetGamMods(psi_covs = swwa_psi_covs)
#
#  inst/output/swwa/gam_aic.csv:
#    command: RunGamMods(I(alpha = "swwa"), pao = swwa_pao, mods = #swwa_gam_mods)
#    depends:
#      - inst/model_opts.csv

#  inst/output/swwa/top_mod.out:
#    command: gof(I(alpha = "swwa"), mods = swwa_gam_mods, pao = swwa_pao)
#    depends:
#      - inst/output/swwa/gam_aic.csv
#      - inst/model_opts.csv
#      - inst/global_opts.csv
#      - inst/output/swwa/route_clim.csv

#  kewa_pao:
#    command: read.pao(f = "inst/output/kewa/pres/pres_in.pao")

#  inst/output/kewa/psi_aic.csv:
#    command: RunPsiMods(I(alpha = "kewa"), pao = kewa_pao, mods = psi_mods)
#    depends:
#      - inst/model_opts.csv

#  kewa_psi_covs:
#    command: top_covs(I(alpha = "kewa"), mods = psi_mods)
#    depends:
#      - inst/output/kewa/psi_aic.csv

#  kewa_gam_mods:
#    command: GetGamMods(psi_covs = kewa_psi_covs)
#
#  inst/output/kewa/gam_aic.csv:
#    command: RunGamMods(I(alpha = "kewa"), pao = kewa_pao, mods = #kewa_gam_mods)
#    depends:
#      - inst/model_opts.csv

#  inst/output/kewa/top_mod.out:
#    command: gof(I(alpha = "kewa"), mods = kewa_gam_mods, pao = kewa_pao)
#    depends:
#      - inst/output/kewa/gam_aic.csv
#      - inst/model_opts.csv
#      - inst/global_opts.csv
#      - inst/output/kewa/route_clim.csv

#  howa_pao:
#    command: read.pao(f = "inst/output/howa/pres/pres_in.pao")

#  inst/output/howa/psi_aic.csv:
#    command: RunPsiMods(I(alpha = "howa"), pao = howa_pao, mods = psi_mods)
#    depends:
#      - inst/model_opts.csv

#  howa_psi_covs:
#    command: top_covs(I(alpha = "howa"), mods = psi_mods)
#    depends:
#      - inst/output/howa/psi_aic.csv

#  howa_gam_mods:
#    command: GetGamMods(psi_covs = howa_psi_covs)
#
#  inst/output/howa/gam_aic.csv:
#    command: RunGamMods(I(alpha = "howa"), pao = howa_pao, mods = #howa_gam_mods)
#    depends:
#      - inst/model_opts.csv

#  inst/output/howa/top_mod.out:
#    command: gof(I(alpha = "howa"), mods = howa_gam_mods, pao = howa_pao)
#    depends:
#      - inst/output/howa/gam_aic.csv
#      - inst/model_opts.csv
#      - inst/global_opts.csv
#      - inst/output/howa/route_clim.csv

#  scta_pao:
#    command: read.pao(f = "inst/output/scta/pres/pres_in.pao")

#  inst/output/scta/psi_aic.csv:
#    command: RunPsiMods(I(alpha = "scta"), pao = scta_pao, mods = psi_mods)
#    depends:
#      - inst/model_opts.csv

#  scta_psi_covs:
#    command: top_covs(I(alpha = "scta"), mods = psi_mods)
#    depends:
#      - inst/output/scta/psi_aic.csv

#  scta_gam_mods:
#    command: GetGamMods(psi_covs = scta_psi_covs)
#
#  inst/output/scta/gam_aic.csv:
#    command: RunGamMods(I(alpha = "scta"), pao = scta_pao, mods = #scta_gam_mods)
#    depends:
#      - inst/model_opts.csv

#  inst/output/scta/top_mod.out:
#    command: gof(I(alpha = "scta"), mods = scta_gam_mods, pao = scta_pao)
#    depends:
#      - inst/output/scta/gam_aic.csv
#      - inst/model_opts.csv
#      - inst/global_opts.csv
#      - inst/output/scta/route_clim.csv

#  eato_pao:
#    command: read.pao(f = "inst/output/eato/pres/pres_in.pao")

#  inst/output/eato/psi_aic.csv:
#    command: RunPsiMods(I(alpha = "eato"), pao = eato_pao, mods = psi_mods)
#    depends:
#      - inst/model_opts.csv

#  eato_psi_covs:
#    command: top_covs(I(alpha = "eato"), mods = psi_mods)
#    depends:
#      - inst/output/eato/psi_aic.csv

#  eato_gam_mods:
#    command: GetGamMods(psi_covs = eato_psi_covs)
#
#  inst/output/eato/gam_aic.csv:
#    command: RunGamMods(I(alpha = "eato"), pao = eato_pao, mods = #eato_gam_mods)
#    depends:
#      - inst/model_opts.csv

#  inst/output/eato/top_mod.out:
#    command: gof(I(alpha = "eato"), mods = eato_gam_mods, pao = eato_pao)
#    depends:
#      - inst/output/eato/gam_aic.csv
#      - inst/model_opts.csv
#      - inst/global_opts.csv
#      - inst/output/eato/route_clim.csv

#  bacs_pao:
#    command: read.pao(f = "inst/output/bacs/pres/pres_in.pao")

#  inst/output/bacs/psi_aic.csv:
#    command: RunPsiMods(I(alpha = "bacs"), pao = bacs_pao, mods = psi_mods)
#    depends:
#      - inst/model_opts.csv

#  bacs_psi_covs:
#    command: top_covs(I(alpha = "bacs"), mods = psi_mods)
#    depends:
#      - inst/output/bacs/psi_aic.csv

#  bacs_gam_mods:
#    command: GetGamMods(psi_covs = bacs_psi_covs)
#
#  inst/output/bacs/gam_aic.csv:
#    command: RunGamMods(I(alpha = "bacs"), pao = bacs_pao, mods = #bacs_gam_mods)
#    depends:
#      - inst/model_opts.csv

#  inst/output/bacs/top_mod.out:
#    command: gof(I(alpha = "bacs"), mods = bacs_gam_mods, pao = bacs_pao)
#    depends:
#      - inst/output/bacs/gam_aic.csv
#      - inst/model_opts.csv
#      - inst/global_opts.csv
#      - inst/output/bacs/route_clim.csv

#  fisp_pao:
#    command: read.pao(f = "inst/output/fisp/pres/pres_in.pao")

#  inst/output/fisp/psi_aic.csv:
#    command: RunPsiMods(I(alpha = "fisp"), pao = fisp_pao, mods = psi_mods)
#    depends:
#      - inst/model_opts.csv

#  fisp_psi_covs:
#    command: top_covs(I(alpha = "fisp"), mods = psi_mods)
#    depends:
#      - inst/output/fisp/psi_aic.csv

#  fisp_gam_mods:
#    command: GetGamMods(psi_covs = fisp_psi_covs)
#
#  inst/output/fisp/gam_aic.csv:
#    command: RunGamMods(I(alpha = "fisp"), pao = fisp_pao, mods = #fisp_gam_mods)
#    depends:
#      - inst/model_opts.csv

#  inst/output/fisp/top_mod.out:
#    command: gof(I(alpha = "fisp"), mods = fisp_gam_mods, pao = fisp_pao)
#    depends:
#      - inst/output/fisp/gam_aic.csv
#      - inst/model_opts.csv
#      - inst/global_opts.csv
#      - inst/output/fisp/route_clim.csv


