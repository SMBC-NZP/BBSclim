# This file is automatically generated from remake.yml.whisker:
# edit the file there (or the files that it includes).

packages:
  - BBSclim
  - rBBS
  - RPresence
  - rmarkdown
  - knitr
  - markdown

targets:
  all:
    depends:
      - annual
{{#spp_names}}
      - inst/reports/{{spp_name}}.html
{{/spp_names}}


## Load objects used for all species

  NA_biovars:
    command: data(target_name)

  bbs:
    command: GetBBS()
    depends:
      - inst/global_opts.csv


## Data processing steps
{{#spp_names}}
  inst/output/{{spp_name}}:
    command: CreateSpp(I(alpha = "{{spp_name}}"))

  {{spp_name}}_AOU:
    command: GetAOU(I(alpha = "{{spp_name}}"))

  inst/output/{{spp_name}}/raw_counts.csv:
    command: GetSppCounts(bbs_raw = bbs, AOU = {{spp_name}}_AOU, I(years = seq(from = 2010, to = 2014)), path = 'inst/output/{{spp_name}}')

  inst/output/{{spp_name}}/no_outlier_counts.csv:
    command: RemoveOutliers(path = 'inst/output/{{spp_name}}')
    depends:
      - inst/output/{{spp_name}}/raw_counts.csv

  inst/output/{{spp_name}}/count_buff.csv:
    command: buffer_BBS(I(alpha = "{{spp_name}}"), bbs = bbs)
    depends:
      - inst/output/{{spp_name}}/no_outlier_counts.csv

  inst/output/{{spp_name}}/route_clim.csv:
    command: GetBioVars(I(alpha = "{{spp_name}}"))
    depends:
      - NA_biovars
      - inst/output/{{spp_name}}/count_buff.csv

  inst/output/{{spp_name}}/pres/pres_in.pao:
    command: write_pao(I(alpha = "{{spp_name}}"))
    depends:
      - inst/output/{{spp_name}}/count_buff.csv
      - inst/output/{{spp_name}}/route_clim.csv


{{/spp_names}}


## Test for annual variation

  annual:
    command: test_annual()
    depends:
      - inst/model_opts.csv
      - inst/spp_list.csv
{{#spp_names}}
      - inst/output/{{spp_name}}/pres/pres_in.pao
{{/spp_names}}
    cleanup_level: never

## Run models
{{#spp_names}}
  {{spp_name}}_pao:
    command: read.pao(f = "inst/output/{{spp_name}}/pres/pres_in.pao")


  inst/output/{{spp_name}}/gam_aic.csv:
    command: RunGamMods(I(alpha = "{{spp_name}}"), pao = {{spp_name}}_pao)
    depends:
      - inst/model_opts.csv


  inst/output/{{spp_name}}/psi_aic.csv:
    command: RunPsiMods(I(alpha = "{{spp_name}}"), pao = {{spp_name}}_pao)
    depends:
      - inst/model_opts.csv
      - inst/output/{{spp_name}}/gam_aic.csv

  inst/output/{{spp_name}}/top_mod.out:
    command: gof(I(alpha = "{{spp_name}}"), pao = {{spp_name}}_pao)
    depends:
      - inst/output/{{spp_name}}/gam_aic.csv
      - inst/output/{{spp_name}}/psi_aic.csv
      - inst/model_opts.csv
      - inst/global_opts.csv
      - inst/output/{{spp_name}}/route_clim.csv
    quiet: TRUE



## Generate indices
  {{spp_name}}_betas:
    command: GetBetas(I(alpha = "{{spp_name}}"))
    depends:
      - inst/output/{{spp_name}}/top_mod.out

  inst/output/{{spp_name}}/occ.csv:
    command: GetOccProb(I(alpha = "{{spp_name}}"), betas = {{spp_name}}_betas)
    depends:
      - inst/global_opts.csv
      - inst/output/{{spp_name}}/count_buff.csv

  inst/output/{{spp_name}}/indices.csv:
    command: GetIndices(I(alpha = "{{spp_name}}"), betas = {{spp_name}}_betas)
    depends:
      - inst/output/{{spp_name}}/occ.csv
      - inst/output/{{spp_name}}/count_buff.csv
      - inst/global_opts.csv

  {{spp_name}}:
    command: GetSummary(I(alpha = "{{spp_name}}"))
    depends:
      - inst/output/{{spp_name}}/count_buff.csv
      - inst/output/{{spp_name}}/raw_counts.csv
      - inst/output/{{spp_name}}/no_outlier_counts.csv
      - inst/output/{{spp_name}}/psi_aic.csv
      - inst/output/{{spp_name}}/gam_aic.csv
      - inst/output/{{spp_name}}/top_mod.out


## Generate reports
  inst/output/{{spp_name}}/report.md:
    knitr:
      input: inst/report.Rmd
      auto_figure_prefix: true
    depends:
      - spp_summ: {{spp_name}}
      - R/reports.R
      - inst/output/{{spp_name}}/occ.csv
      - inst/output/{{spp_name}}/indices.csv
    cleanup_level: purge
  inst/reports/{{spp_name}}.html:
    command: md2html(filename = "inst/output/{{spp_name}}/report.md", dest = target_name)
    cleanup_level: purge

{{/spp_names}}
