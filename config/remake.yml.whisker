# This file is automatically generated from remake.yml.whisker:
# edit the file there (or the files that it includes).

packages:
  - BBSclim
  - rBBS
  - RPresence
  - rmarkdown
  - knitr
  - markdown

targets:
  all:
    depends:
{{#spp_names}}
      - inst/output/{{spp_name}}/report.html
{{/spp_names}}


## Load objects used for all species
  inst/global_opts.csv:
    command: global_opts()

  inst/model_opts.csv:
    command: model_opts(I(psi.test = TRUE), I(gam.test = TRUE))

  bbs:
    command: GetBBS()

  NA_biovars:
    command: data(target_name)

  gam_mods:
    command: GetGamMods()


## Data processing steps
{{#spp_names}}
  inst/output/{{spp_name}}:
    command: CreateSpp(I(alpha = "{{spp_name}}"))

  {{spp_name}}_AOU:
    command: GetAOU(I(alpha = "{{spp_name}}"))

  inst/output/{{spp_name}}/raw_counts.csv:
    command: GetSppCounts(bbs_raw = bbs, AOU = {{spp_name}}_AOU, Write = TRUE, path = 'inst/output/{{spp_name}}')

  {{spp_name}}_counts:
    command: read.csv("inst/output/{{spp_name}}/raw_counts.csv")

  inst/output/{{spp_name}}/no_outlier_counts.csv:
    command: RemoveOutliers(counts = {{spp_name}}_counts, Write = TRUE, path = 'inst/output/{{spp_name}}')

  inst/output/{{spp_name}}/count_buff.csv:
    command: buffer_BBS(I(alpha = "{{spp_name}}"), bbs = bbs)
    depends:
      - inst/output/{{spp_name}}/no_outlier_counts.csv

  inst/output/{{spp_name}}/route_map.pdf:
    command: make_route_plot(I(alpha = "{{spp_name}}"))
    depends:
      - inst/output/{{spp_name}}/count_buff.csv
      - inst/output/{{spp_name}}/raw_counts.csv
      - inst/output/{{spp_name}}/no_outlier_counts.csv

  inst/output/{{spp_name}}/route_clim.csv:
    command: GetBioVars(I(alpha = "{{spp_name}}"))
    depends:
      - NA_biovars
      - inst/output/{{spp_name}}/count_buff.csv

  inst/output/{{spp_name}}/pres/pres_in.pao:
    command: write_pao(I(alpha = "{{spp_name}}"))
    depends:
      - inst/global_opts.csv
      - inst/output/{{spp_name}}/count_buff.csv
      - inst/output/{{spp_name}}/route_clim.csv
{{/spp_names}}


## Run models
{{#spp_names}}
  {{spp_name}}_pao:
    command: read.pao(f = "inst/output/{{spp_name}}/pres/pres_in.pao")

  inst/output/{{spp_name}}/annual_aic.csv:
    command: test_annual(I(alpha = "{{spp_name}}"), pao = {{spp_name}}_pao)
    depends:
      - inst/model_opts.csv

  inst/output/{{spp_name}}/gam_aic.csv:
    command: RunGamMods(I(alpha = "{{spp_name}}"), pao = {{spp_name}}_pao)
    depends:
      - inst/model_opts.csv
      - inst/output/{{spp_name}}/annual_aic.csv

  {{spp_name}}_gam_covs:
    command: top_covs(I(alpha = "{{spp_name}}"), mods = gam_mods)
    depends:
      - inst/output/{{spp_name}}/gam_aic.csv

  {{spp_name}}_psi_mods:
    command: GetPsiMods(covs = {{spp_name}}_gam_covs)

  inst/output/{{spp_name}}/psi_aic.csv:
    command: RunPsiMods(I(alpha = "{{spp_name}}"), pao = {{spp_name}}_pao, mods = {{spp_name}}_psi_mods)
    depends:
      - inst/model_opts.csv
      - inst/output/{{spp_name}}/annual_aic.csv

  inst/output/{{spp_name}}/top_mod.out:
    command: gof(I(alpha = "{{spp_name}}"), mods = {{spp_name}}_psi_mods, pao = {{spp_name}}_pao)
    depends:
      - inst/output/{{spp_name}}/psi_aic.csv
      - inst/model_opts.csv
      - inst/global_opts.csv
      - inst/output/{{spp_name}}/route_clim.csv
    quiet: TRUE

{{/spp_names}}


## Generate indices
{{#spp_names}}
  spp_betas:
    command: GetBetas(I(alpha = "{{spp_name}}"))
    depends:
      - inst/output/{{spp_name}}/top_mod.out

  inst/output/{{spp_name}}/occ.csv:
    command: GetOccProb(I(alpha = "{{spp_name}}"), betas = spp_betas)
    depends:
      - inst/global_opts.csv
      - inst/output/{{spp_name}}/count_buff.csv

  inst/output/{{spp_name}}/indices.csv:
    command: GetIndices(I(alpha = "{{spp_name}}"))
    depends:
      - inst/output/{{spp_name}}/occ.csv
      - inst/output/{{spp_name}}/count_buff.csv
      - inst/global_opts.csv

  {{spp_name}}:
    command: GetSummary(I(alpha = "{{spp_name}}"))
    depends:
      - inst/output/{{spp_name}}/count_buff.csv
      - inst/output/{{spp_name}}/raw_counts.csv
      - inst/output/{{spp_name}}/no_outlier_counts.csv
      - inst/output/{{spp_name}}/psi_aic.csv
      - inst/output/{{spp_name}}/gam_aic.csv
      - inst/output/{{spp_name}}/annual_aic.csv
      - inst/output/{{spp_name}}/top_mod.out
{{/spp_names}}


## Generate reports
{{#spp_names}}
  inst/output/{{spp_name}}/report.md:
    knitr:
      input: inst/report.Rmd
    depends:
      - spp_summ: {{spp_name}}
      - R/reports.R
      - inst/output/{{spp_name}}/occ.csv
      - inst/output/{{spp_name}}/indices.csv
    cleanup_level: purge
  inst/output/{{spp_name}}/report.html:
    command: md2html("inst/output/{{spp_name}}/report.md")
    cleanup_level: purge

{{/spp_names}}
