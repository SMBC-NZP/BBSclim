# This file is automatically generated from remake.yml.whisker:
# edit the file there (or the files that it includes).

packages:
  - BBSclim
  - rBBS
  - RPresence
  - rmarkdown
  - knitr
  - markdown

targets:
  all:
    depends:
      - annual_check
      - data_check
{{#spp_names}}
      - inst/reports/{{spp_name}}.html
{{/spp_names}}


## Format BBS & climate data; create .pao input files for Presence

  data_check:
    command: input_data(start_yr = 2010)
    depends:
      - inst/spp_list.csv
      - inst/model_opts.csv


## Test for annual variation

  annual_check:
    command: test_annual()
    depends:
      - inst/spp_list.csv
      - inst/model_opts.csv


## Run models
{{#spp_names}}
  inst/output/{{spp_name}}/gam_aic.csv:
    command: RunGamMods(I(alpha = "{{spp_name}}"))
    depends:
      - inst/model_opts.csv
      - annual_check


  inst/output/{{spp_name}}/psi_aic.csv:
    command: RunPsiMods(I(alpha = "{{spp_name}}"))
    depends:
      - inst/model_opts.csv
      - inst/output/{{spp_name}}/gam_aic.csv

  inst/output/{{spp_name}}/top_mod.out:
    command: gof(I(alpha = "{{spp_name}}"))
    depends:
      - inst/output/{{spp_name}}/psi_aic.csv
    quiet: TRUE



## Generate indices
  {{spp_name}}_betas:
    command: GetBetas(I(alpha = "{{spp_name}}"))
    depends:
      - inst/output/{{spp_name}}/top_mod.out

  inst/output/{{spp_name}}/occ.csv:
    command: GetOccProb(I(alpha = "{{spp_name}}"), betas = {{spp_name}}_betas)


  inst/output/{{spp_name}}/indices.csv:
    command: GetIndices(I(alpha = "{{spp_name}}"), betas = {{spp_name}}_betas)
    depends:
      - inst/output/{{spp_name}}/occ.csv


  {{spp_name}}:
    command: GetSummary(I(alpha = "{{spp_name}}"))
    depends:
      - inst/output/{{spp_name}}/indices.csv


## Generate reports
  inst/output/{{spp_name}}/report.md:
    knitr:
      input: inst/report.Rmd
      auto_figure_prefix: true
    depends:
      - spp_summ: {{spp_name}}
      - R/reports.R
      - inst/output/{{spp_name}}/indices.csv
    cleanup_level: purge

  inst/reports/{{spp_name}}.html:
    command: md2html(filename = "inst/output/{{spp_name}}/report.md", dest = target_name)
    cleanup_level: purge

{{/spp_names}}
